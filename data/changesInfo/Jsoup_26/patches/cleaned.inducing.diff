Only in data/changesInfo//Jsoup_26/properties/modified_classes/inducing/src: main
Only in data/changesInfo//Jsoup_26/properties/modified_classes/inducing/src/test/java/org/jsoup: nodes
Only in data/changesInfo//Jsoup_26/properties/modified_classes/inducing/src/test/java/org/jsoup: parser
diff -u -r data/changesInfo//Jsoup_26/properties/modified_classes/inducing/src/test/java/org/jsoup/safety/CleanerTest.java data/changesInfo//Jsoup_26/cleaned/inducing/src/test/java/org/jsoup/safety/CleanerTest.java
--- data/changesInfo//Jsoup_26/properties/modified_classes/inducing/src/test/java/org/jsoup/safety/CleanerTest.java	2023-08-25 14:15:48.183724109 +0800
+++ data/changesInfo//Jsoup_26/cleaned/inducing/src/test/java/org/jsoup/safety/CleanerTest.java	2023-08-03 19:19:34.324156456 +0800
@@ -4,6 +4,7 @@
 import org.jsoup.TextUtil;
 import org.jsoup.safety.Whitelist;
 import org.junit.Test;
+import org.jsoup.nodes.Document;
 import static org.junit.Assert.*;
 
 /**
@@ -107,4 +108,15 @@
         String clean = Jsoup.clean(html, Whitelist.basic());
         assertEquals("<a rel=\"nofollow\">Link</a>", clean);
     }
+
+    @Test public void handlesFramesets() {
+        String dirty = "<html><head><script></script><noscript></noscript></head><frameset><frame src=\"foo\" /><frame src=\"foo\" /></frameset></html>";
+        String clean = Jsoup.clean(dirty, Whitelist.basic());
+        assertEquals("", clean); // nothing good can come out of that
+
+        Document dirtyDoc = Jsoup.parse(dirty);
+        Document cleanDoc = new Cleaner(Whitelist.basic()).clean(dirtyDoc);
+        assertFalse(cleanDoc == null);
+        assertEquals(0, cleanDoc.body().childNodes().size());
+    }
 }
Only in data/changesInfo//Jsoup_26/properties/modified_classes/inducing/src/test/java/org/jsoup: select
